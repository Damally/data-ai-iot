{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string"
        }
    },

    "variables": {
        "namePrefix": "[resourceGroup().name]",
        "uniqueNamePrefix": "[toLower(concat(resourceGroup().name, uniqueString(subscription().subscriptionId)))]",
        "location": "[resourceGroup().location]",
        "stgVersion": "2015-06-15",
        "storageAccountType": "Standard_GRS",
        "storageAccountName": "[variables('uniqueNamePrefix')]",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "tier": "premium",
        "managedResourceGroupName": "[concat('databricks-rg-', parameters('workspaceName'), '-', uniqueString(parameters('workspaceName'), resourceGroup().id))]",
        "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
        "sbVersion": "2014-09-01",
        "sbNameIngest": "[concat(variables('uniqueNamePrefix'), 'servicebusingest')]",
        "sbKeyName": "RootManageSharedAccessKey",
        "sbResourceIdIngest": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('sbNameIngest'), variables('sbKeyName'))]",
        "ehInNameIngest": "[concat(variables('namePrefix'), 'ehiningest')]",
        "ehSendPolicyKeyName": "SendPolicy",
        "ehSendPolicyResourceIdIngest": "[resourceId('Microsoft.EventHub/namespaces/eventHubs/authorizationRules', variables('sbNameIngest'), variables('ehInNameIngest'), variables('ehSendPolicyKeyName'))]",
        "ehResourceIdIngest": "[concat(concat(concat('Microsoft.Eventhub/namespaces/', variables('sbNameIngest')), '/eventHubs/'), variables('ehInNameIngest'))]",
        "ehSendPolicyNameIngest": "[concat(variables('sbNameIngest'), concat('/', concat(variables('ehInNameIngest'), concat('/', variables('ehSendPolicyKeyName')))))]",
        "consumerGroupName": "[concat(variables('namePrefix'), 'timeseriestweets')]",
        "sfVersion": "2016-03-01",
        "environmentName": "[concat(variables('uniqueNamePrefix'), 'tsienv')]",
        "environmentSkuName": "S1",
        "environmentSkuCapacity": 1,
        "environmentDataRetentionTime": "P30D",
        "environmentDisplayName": "[concat(variables('namePrefix'), 'StreamingTweets')]",
        "eventSourceName": "[concat(variables('uniqueNamePrefix'), 'eventsource')]",
        "eventSourceDisplayName": "Twitter Time Series Insights",
        "eventHubResourceId": "[variables('sbResourceIdIngest')]",
        "eventHubServiceBusNamespace": "[variables('sbNameIngest')]",
        "eventHubName": "[variables('ehInNameIngest')]",
        "eventHubConsumerGroupName": "[variables('consumerGroupName')]",
        "eventHubKeyName": "[variables('sbKeyName')]",
        "eventHubSharedAccessKey": "[variables('ehSendPolicyResourceIdIngest')]",
        "accessPolicyName": "user",
        "accessPolicyPrincipalObjectId": "notsure",
        "accessPolicyRole": "Contributor",
        "environmentTagsOptions": [
            null,
            {
                "displayName": "[variables('environmentDisplayName')]"
            }
        ],
        "environmentTagsValue": "[variables('environmentTagsOptions')[length(take(variables('environmentDisplayName'), 1))]]",
        "eventSourceTagsOptions": [
            null,
            {
                "displayName": "[variables('eventSourceDisplayName')]"
            }
        ],
        "eventSourceTagsValue": "[variables('eventSourceTagsOptions')[length(take(variables('eventSourceDisplayName'), 1))]]"
    },
    "resources": [{
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[variables('location')]",
            "apiVersion": "[variables('stgVersion')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
    {
            "apiVersion": "2018-04-01",
            "location": "[variables('location')]",
            "name": "[parameters('workspaceName')]",
            "sku": {
                "name": "[variables('tier')]"
            },
            "properties": {
                "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
            },
            "type": "Microsoft.Databricks/workspaces"
    },
    {
        "apiVersion": "[variables('sbVersion')]",
        "name": "[variables('sbNameIngest')]",
        "type": "Microsoft.Eventhub/namespaces",
        "location": "[variables('location')]",
        "properties": {
            "region": "[variables('location')]"
        },
        "resources": [{
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('ehInNameIngest')]",
            "type": "eventHubs",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Eventhub/namespaces/', variables('sbNameIngest'))]"
            ],
            "properties": {
                "path": "[variables('ehInNameIngest')]"
            },
            "resources": [{
                "apiVersion": "2015-08-01",
                "name": "[variables('consumerGroupName')]",
                "type": "ConsumerGroups",
                "location": "[variables('location')]",
                "dependsOn": [
                    "[concat('Microsoft.EventHub/namespaces/', variables('sbNameIngest'),'/eventhubs/',variables('ehInNameIngest'))]"
                ],
                "properties": {}
            }, {
                "apiVersion": "2015-08-01",
                "name": "[variables('ehSendPolicyKeyName')]",
                "type": "authorizationRules",
                "location": "[variables('location')]",
                "dependsOn": [
                    "[variables('ehResourceIdIngest')]"
                ],
                "properties": {
                    "rights": [
                        "Send",
                        "Listen",
                        "Manage"
                    ]
                }
            }]
        }]
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "name": "[variables('environmentName')]",
      "apiVersion": "2017-02-28-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "dataRetentionTime": "[variables('environmentDataRetentionTime')]"
      },
      "sku": {
        "name": "[variables('environmentSkuName')]",
        "capacity": "[variables('environmentSkuCapacity')]"
      },
      "tags": "[variables('environmentTagsValue')]",
      "resources": [
        {
          "type": "eventsources",
          "name": "[variables('eventSourceName')]",
          "apiVersion": "2017-02-28-preview",
          "location": "[resourceGroup().location]",
          "kind": "Microsoft.EventHub",
          "properties": {
            "eventSourceResourceId": "[variables('eventHubResourceId')]",
            "serviceBusNamespace": "[variables('eventHubServiceBusNamespace')]",
            "eventHubName": "[variables('eventHubName')]",
            "consumerGroupName": "[variables('eventHubConsumerGroupName')]",
            "keyName": "[variables('eventHubKeyName')]",
            "sharedAccessKey": "[listkeys(variables('sbResourceIdIngest'), variables('sbVersion')).primaryKey]"
          },
          "tags": "[variables('eventSourceTagsValue')]",
          "dependsOn": [
            "[concat('Microsoft.TimeSeriesInsights/environments/', variables('environmentName'))]"
          ]
        }
      ]
    }],
    "outputs": {
        "ehNameIngest": {
            "type": "string",
            "value": "[variables('ehInNameIngest')]"
        },
        "eventHubConnectionStringIngest": {
            "type": "string",
            "value": "[listkeys(variables('ehSendPolicyResourceIdIngest'), variables('sbVersion')).primaryConnectionString]"
        },
        "dataAccessId" : {
            "value" : "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', variables('environmentName'))).dataAccessId]",
             "type": "string"
        },
        "dataAccessPaneUrl": { "type": "string", "value": "[concat('https://portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.TimeSeriesInsights/environments/', variables('environmentName'),'/access')]" },
        "tsiOverviewUrl": { "type": "string", "value": "[concat('https://portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.TimeSeriesInsights/environments/', variables('environmentName'),'/overview')]" }
    }
}